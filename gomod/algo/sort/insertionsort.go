package sort

/*
InsertionSort

Временная сложность: O(n^2) в худшем и среднем случаях. В лучшем случае (если массив уже отсортирован) — O(n).
Пространственная сложность: O(1).

Преимущество: Хорошо работает на небольших массивах и почти отсортированных данных.
Недостаток: Низкая производительность для больших массивов.

Принцип работы: Вставка каждого элемента массива в отсортированную часть массива, сдвигая элементы, которые больше текущего.
Шаги:
- Берем текущий элемент и сравниваем его с элементами слева от него.
- Вставляем его в нужное место, сдвигая остальные элементы вправо.
*/
func InsertionSort(numbers []int) {
	n := len(numbers)
	for i := 1; i < n; i++ {
		key := numbers[i]
		j := i - 1
		for j >= 0 && numbers[j] > key {
			numbers[j+1] = numbers[j]
			j--
		}
		numbers[j+1] = key
	}
}
